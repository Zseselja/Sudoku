Group names: 
Jason Chen		V00737238
Alix Voorthuyzen	v00784048
Zachary Seselja		V00775627
Beijia Yu		V00810721

Please see SummaryReport.pdf for imformation about the coding scheme used and tests run for the following python code

We have three python files each are explained below, all were run in cygwin when running minisat, but can be run to produce the clauses without 
running in cygwin:

1) NSizeSudoku.py inputfilename outputfilename puzzlesize minisatpath

inputfilename is the file with the unsolved sudoku puzzle information. The puzzle is represented with 0's for blank cells
outputfilename is the file that is outputed by NSizeSudoku.py that holds all the clauses generated by the minimal encoding
puzzlesize is the number of cells in the sudoku puzzle. For example, a standard 9x9 sudoku puzzle would be input as 81
minisatpath is the path to the minisat.exe that you want to pass the clauses to.

NSizeSudoku will take an unsolved sudoku puzzle and create the minimal clauses then pass those clauses to the miniSAT-solver 
specified and then take the output from the miniSAT-solver and print out the solved sudoku puzzle.


2) EESudoku.py inputfilename outputfilename puzzlesize minisatpath

inputfilename is the file with the unsolved sudoku puzzle information. The puzzle is represented with 0's for blank cells
outputfilename is the file that is outputed by NSizeSudoku.py that holds all the clauses generated by the minimal encoding
puzzlesize is the number of cells in the sudoku puzzle. For example, a standard 9x9 sudoku puzzle would be input as 81
minisatpath is the path to the minisat.exe that you want to pass the clauses to.

EESudoku will take an unsolved sudoku puzzle and create the clauses including the extended encodings then pass those 
clauses to the miniSAT-solver specified and then take the output from the miniSAT-solver and print out the solved sudoku 
puzzle.


3) pycosatSudoku.py inputfilename outputfilename puzzlesize SATpath

inputfilename is the file with the unsolved sudoku puzzle information. The puzzle is represented with 0's for blank cells
outputfilename is the file that is outputed by NSizeSudoku.py that holds all the clauses generated by the minimal encoding
puzzlesize is the number of cells in the sudoku puzzle. For example, a standard 9x9 sudoku puzzle would be input as 81
SATpath is the path to the minisat.exe that you want to pass the clauses to.

pycosatSudoku will take an unsolved sudoku puzzle and create the clauses then pass those clauses to the SAT-solver 
specified and then take the output from the miniSAT-solver and print out the solved sudoku puzzle.


We have also included 4 sample input files of unsolved sudokus:
9x9 sudoku puzzles:
	easytest.txt - holds 8 unsolved 'easy' sudoku puzzles retrieved from http://www.printablesudoku99.com/pdf/EasySudoku001.pdf
	medtest.txt - holds 14 unsolved 'med' sudoku puzzles retrvied from http://www.sudokupuzz.com/medium_sudoku.pdf
	hardtest.txt - holds 14 unsolved 'hard' sudoku puzzles retrvied from http://sudokupuzzle.org/hardsudoku.pdf 
16x16 sudoku puzzles:
16grid.txt - holds 2 unsolved sudoku puzzles retrieved from http://en.top-sudoku.com/cgi-bin/hexadoku/print-5-grid-hexadoku.cgi?1

